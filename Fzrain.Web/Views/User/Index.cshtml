@using Fzrain.Core.Domain


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section featured{
    <style>
        #page-tree {
            padding: 20px 20px 40px 30px;
            white-space: normal;
            word-break: break-all;
            overflow: hidden;
        }

        #page-tree .k-sprite {
        background-image:url(../../Content/web/treeview/icons-sprite.png);
    }

    .folder { background-position: 0 0; }
    .file { background-position: 0 -16px; }
    .image { background-position: 0 -32px; }
   
    </style>
}

<div id="page-nav" class="mainleft">
    @(Html.Kendo().TreeView()
                .Name("page-tree")
        .Items(treeview => treeview.Add().Text("My Web Site")
            .SpriteCssClasses("folder")
            .Expanded(true)
            .Items(root =>
            {
                root.Add().Text("images")
                    .Expanded(true)
                    .SpriteCssClasses("folder")
                    .Items(images =>
                    {
                        images.Add().Text("logo.png")
                            .SpriteCssClasses("file");

                        images.Add().Text("body-back.png")
                            .SpriteCssClasses("file");

                        images.Add().Text("my-photo.jpg")
                            .SpriteCssClasses("file");
                    });

                root.Add().Text("resources")
                    .Expanded(true)
                    .SpriteCssClasses("folder")
                    .Items(resources =>
                    {
                        resources.Add().Text("pdf")
                            .Expanded(true)
                            .SpriteCssClasses("folder")
                            .Items(pdf =>
                            {
                                pdf.Add().Text("brochure.pdf")
                                    .SpriteCssClasses("file");

                                pdf.Add().Text("prices.pdf")
                                    .SpriteCssClasses("file");
                            });

                        resources.Add().Text("zip")
                            .SpriteCssClasses("file");
                    });

                root.Add().Text("about.html")
                    .SpriteCssClasses("file");

                root.Add().Text("contacts.html")
                    .SpriteCssClasses("file");

                root.Add().Text("index.html")
                    .SpriteCssClasses("file");

                root.Add().Text("portfolio.html")
                    .SpriteCssClasses("file");
            }))
    )

</div>

<div class="mainright">
    @(Html.Kendo().Grid<User>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(u => u.Id)
                 .HeaderTemplate("<input type='checkbox'  />")
                  .ClientTemplate("<input type='checkbox'  />")
                  .HtmlAttributes(new { style = "text-align: center" })
                  .Width(20);
                columns.Bound(u => u.Id).Width(30);
                columns.Bound(u => u.UserName).Width(100);
                columns.Bound(u => u.Password).Width(100);
                columns.Bound(u => u.Birthday ).Width(100);
                columns.Bound(u => u.Email ).Width(100);
                columns.Bound(u => u.Gender ).Width(100);
                columns.Bound(u => u.MobilePhone ).Width(100);
                
                columns.Command(command => { command.Edit(); command.Destroy();    }).Width(160);
            })
            .ToolBar(toolbar => toolbar.Create().Text("新增"))
            .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("UserEdit").Window(c => c.Title("用户信息").Scrollable(true) ) )
            .Pageable(c => c.PageSizes(true).Messages(m => m.Next("下一页").ItemsPerPage("每页记录数")).Refresh(true))
            .Filterable()
            .Sortable ()
            .Scrollable()
            .HtmlAttributes(new { style = "height:100%;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(5)
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(u => u.Id))
                .Create(update => update.Action("Create", "User"))
                    .Read(read => read.Action("Read", "User"))
                    .Update(update => update.Action("Update", "User"))
                    .Destroy(update => update.Action("Destroy", "User"))
            )
    )
</div>




<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>
